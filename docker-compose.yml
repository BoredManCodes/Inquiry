version: "3.9"

services:
  inquiry:
    container_name: Inquiry
    ports:
      - "8877:8877"
    expose:
      - "8877"
    build:
      context: ./
      dockerfile: ./Dockerfile
    volumes:
      - ./logs:/app/logs
    restart:
      always
    depends_on:
      - postgres

  postgres:
    container_name: Postgres
    image: postgres:latest
    hostname: postgres
    ports:
      - "5432:5432"
    expose:
      - 5432
    restart:
      always
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    expose:
      - 9090
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    expose:
      - 3000
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini

networks:
  inquiry-network:
    external: false


volumes:
  postgres-data:
    driver: local
  prometheus_data:
  grafana_data: